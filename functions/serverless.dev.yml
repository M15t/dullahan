service: ${self:custom.mainAppName.${opt:stage, 'dev'}}-functions

frameworkVersion: "3"
useDotenv: true

plugins:
  - serverless-hooks-plugin
  - serverless-prune-plugin

custom:
  mainAppName:
    dev: yinakuchi-z3drdt73yw
  deploymentBuckets:
    dev: lighthouse-6cvt0sda48

  hooks:
    before:package:initialize:
      - env GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o migration/main migration/main.go
    after:deploy:finalize:
      - rm -rf .serverless migration/main
  prune:
    automatic: true
    includeLayers: true
    number: 3

provider:
  name: aws
  profile: fl-dev
  deploymentBucket:
    name: ${self:custom.deploymentBuckets.${opt:stage, 'dev'}}
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-southeast-1'}
  vpc:
    subnetIds:
      - subnet-7b4d8633
      - subnet-3e1a8c67
    securityGroupIds:
      - sg-0a065eae08add1ef1
  environment:
    STAGE: ${opt:stage, 'dev'}
    DEBUG: true
    DB_LOG: true
    CONFIG_NAME: ${self:custom.mainAppName.${opt:stage, 'dev'}}
    CONFIG_STAGE: ${opt:stage, 'dev'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "logs:*"
            - "ssm:GetParametersByPath"
            - "kms:Encrypt"
            - "kms:Decrypt"
            - "kms:ReEncrypt*"
            - "kms:GenerateDataKey*"
            - "kms:DescribeKey"
          Resource: "*"

package:
  individually: true
  patterns:
    - "!./**"
    - .env

functions:
  Migration:
    name: ${self:service}-migration
    handler: migration/main
    runtime: go1.x
    timeout: 30 # optional, in seconds, default is 6
    memorySize: 128
    package:
      patterns:
        - migration/main
