service: yinakuchi-z3drdt73yw

frameworkVersion: "3"
useDotenv: true

plugins:
  - serverless-hooks-plugin
  - serverless-prune-plugin

custom:
  host:
    dev: gz7m5xxajf.execute-api.ap-southeast-1.amazonaws.com/dev/
  deploymentBuckets:
    dev: lighthouse-6cvt0sda48
  hooks:
    before:package:initialize:
      - AWS_REGION=ap-southeast-1 AWS_LAMBDA_FUNCTION_NAME=${self:service} HOST=${self:custom.host.${opt:stage, 'dev'}, ''} make build.linux specs
    after:deploy:finalize:
      - make clean
  prune:
    automatic: true
    includeLayers: true
    number: 3

# customDomain:
#   certificateName: ${self:custom.certificates.${self:provider.stage}, ''}
#   domainName: ${self:custom.domains.${self:provider.stage}, ''}
#   basePath: ""
#   stage: ${self:provider.stage}
#   createRoute53Record: true

package:
  patterns:
    - "!./**"
    - ".env"
    - "bootstrap"
    - "server"
    - "swaggerui/**"
    - "templates/**"

provider:
  name: aws
  runtime: provided.al2
  architecture: arm64
  # runtime: go1.x
  profile: fl-dev
  memorySize: 128
  timeout: 6 # optional, in seconds, default is 6
  stage: ${opt:stage, 'dev'}
  region: ${opt:region, 'ap-southeast-1'}
  vpc:
    subnetIds:
      - subnet-7b4d8633
      - subnet-3e1a8c67
    securityGroupIds:
      - sg-0a065eae08add1ef1
  deploymentBucket:
    name: ${self:custom.deploymentBuckets.${opt:stage, 'dev'}, ''}
  apiGateway:
    shouldStartNameWithService: true
  environment:
    STAGE: ${opt:stage, 'dev'}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "logs:*"
            - "ssm:GetParametersByPath"
            - "kms:Encrypt"
            - "kms:Decrypt"
            - "kms:ReEncrypt*"
            - "kms:GenerateDataKey*"
            - "kms:DescribeKey"
          Resource: "*"

functions:
  app:
    handler: bootstrap
    name: ${self:service}
    events:
      - http:
          path: "/"
          method: ANY
          cors: true
      - http:
          path: "{proxy+}"
          method: ANY
          cors: true
